M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,1]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,2]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,0,0,0,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,2]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,1,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,2,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,0,1,0,0,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,2]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,1,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,2,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,0,0,0,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,2,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,1,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,2,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,3,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,1,4,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,0,1,0,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,2]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,1,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,2,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,0,0,0,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,2,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,1,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,2,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,3,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,1,4,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([0,1,0,0,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,1,1,3]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,2,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,1,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,2,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,3,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,1,4,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,0,0,0,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,1,1,4]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,3,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,2,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,3,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,1,4,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,1,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,1,2,5]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,1,4,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,3,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,1,4,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,2,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,1,2,6]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,5,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,1,4,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,3,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,1,2,6,1,2,2,7]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,1,2,6,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,1,2,6,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,1,2,6,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,1,2,6,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,1,2,6,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,5,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,1,4,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,7,1,2,2,8]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,7,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,7,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,7,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,7,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,1,2,6,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,5,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,2,8,1,2,3,9]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,2,8,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,2,8,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,2,8,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,7,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,1,2,6,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,2,8,1,2,3,9,1,2,3,10]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,2,8,1,2,3,9,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,2,8,1,2,3,9,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,2,8,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,2,8,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,2,8,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,7,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,8,1,2,3,9,1,2,3,10,1,2,3,11]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,8,1,2,3,9,1,2,3,10,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,8,1,2,3,9,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,2,8,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
M = MatrixSpace(QQ,4,4); A = M([1,2,3,9,1,2,3,10,1,2,3,11,1,2,3,12]); det(A);
